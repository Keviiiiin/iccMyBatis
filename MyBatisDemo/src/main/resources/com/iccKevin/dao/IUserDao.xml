<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--该配置文件的目录结构与dao接口的目录结构一致 -->
<!--命名空间写dao接口的全限定类名-->
<!--可能有多个数据库表需要查询，所以需要将命名空间（类名）和id组合在一起才能定位到SQL语句-->
<mapper namespace="com.iccKevin.dao.IUserDao">

    <resultMap id="userAccountMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="birthday" column="birthday"></result>
        <result property="sex" column="sex"></result>
        <result property="address" column="address"></result>
        <collection property="accounts" ofType="account">
            <id column="aid" property="id"></id>
            <result property="uid" column="uid"></result>
            <result property="money" column="money"></result>
        </collection>
    </resultMap>

    <resultMap id="userRoleMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="birthday" column="birthday"></result>
        <result property="sex" column="sex"></result>
        <result property="address" column="address"></result>
        <collection property="roles" ofType="role">
            <id column="rid" property="id"></id>
            <result property="roleName" column="role_name"></result>
            <result property="roleDesc" column="role_desc"></result>
        </collection>
    </resultMap>

    <!-- 抽取重复的语句代码片段 -->
    <sql id="defaultSelect">
        select * from user
    </sql>

    <select id="findAll" resultMap="userAccountMap">
        select u.*,a.id as aid,a.uid,a.money from user u left join account a on u.id = a.uid
    </select>

    <select id="findRole" resultMap="userRoleMap">
        select u.*,r.id as rid,r.role_name as role_name,r.role_desc as role_desc from user u
        left join user_role ur on u.id = ur.uid
        left join role r on ur.rid = r.id
    </select>
    
    <insert id="insertUser" parameterType="User">
        <!-- 配置保存时获取插入的 id，插入成功后作为参数返回到User对象的id属性中 -->
        <selectKey keyColumn="id" keyProperty="id" resultType="int">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)values(#{username},#{address},#{sex},#{birthday});
    </insert>

    <delete id="deleteUser" parameterType="int">
        delete from user where id = #{id}
    </delete>

    <update id="updateUser" parameterType="User">
        update user
        set username=#{username},sex=#{sex},address=#{address},birthday=#{birthday}
        where id=#{id}
    </update>

    <select id="findById" resultType="User">
        <include refid="defaultSelect"></include>
        where id=#{id}
    </select>

    <select id="findByName" parameterType="string" resultType="User">
        <include refid="defaultSelect"></include>
        where username like #{name}
    </select>

    <select id="findByVo" parameterType="QueryVo" resultType="User">
        <!-- 其实是QueryVo.user.username,但被OGNL表达式省略了-->
        <include refid="defaultSelect"></include>
        where username like #{user.username}
    </select>

    <select id="findTotal" resultType="int">
        select count(id)
        from user
    </select>

    <select id="findByCondition" resultType="user" parameterType="user">
        <include refid="defaultSelect"></include>
        <where>
            <if test="username!=null and username != '' ">
                and username like #{username}
            </if>
            <if test="address != null">
                and address like #{address}
            </if>
        </where>
    </select>

    <select id="findInIds" resultType="user" parameterType="queryvo">
    <!-- select * from user where id in (1,2,3) -->
        <include refid="defaultSelect"></include>
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="id in ( " close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>
</mapper>